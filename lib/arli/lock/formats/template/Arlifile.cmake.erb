# vi:syntax=cmake
#
# Â© 2017 Konstantin Gredeskoul
#   Distributed under MIT license.
#
# NOTE: This file has been auto-generated by the Arli library manager
# which integrates with another project `arduino-cmake`. If you are
# curious as to how you can build complex Arduino Projects using Arli,
# we suggest that you run the following commands to explore Arli:
# 
#      arli generate MyTestProject --workspace ~/workspace
#      cd ~/workspace/MyTestProject
#      bin/setup
#      bin/build src
#
# And you should see a binary image built for the default board, or the 
# board you specified in the Arlifile.
#
# For more info:
#   See https://github.com/kigster/arli
#   See https://github.com/kigster/arli-cmake
#   See https://github.com/kigster/arduino-cmake

set(ARLI_CUSTOM_LIBS_PATH "<%= arli_library_path %>")

set(ARLI_CUSTOM_LIBS <% libraries.each do |library| %>
      <%= library.canonical_dir %><% end %>)

set(ARLI_ARDUINO_HARDWARE_LIBS <% hardware_libraries.each do |library| %>
      <%= library.name %><% end %>)

set(ARLI_ARDUINO_LIBS <% arduino_libraries.each do |library| %>
      <%= library.name %><% end %>)

<% device_libraries_headers_only.each do |library| %>
set(<%= library.name %>_ONLY_HEADER yes)<% end %>
<% custom_libraries_headers_only.each do |library| %>
set(<%= library.canonical_dir %>_ONLY_HEADER yes)<% end %>

include(Arli)

arli_detect_serial_device("/dev/null")
arli_detect_board("<%= board %>" "<%= cpu %>")

message(STATUS "device: [${BOARD_DEVICE}], board: [${BOARD_NAME}], cpu: [${BOARD_CPU}] <<<")

arli_build_all_libraries()


